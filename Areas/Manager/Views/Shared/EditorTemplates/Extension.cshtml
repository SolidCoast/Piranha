@using Piranha.Extend
@using Piranha.WebPages
@model Models.Extension
@{
    string folder = Model.Type.LastIndexOf('.') > -1 ? Model.Type.Substring(0, Model.Type.LastIndexOf('.')) : string.Empty;
    folder = folder != string.Empty ? folder + "/" : string.Empty;
    string view = Model.Type.Substring(folder.Length);

    Manager.MenuItem menu = Manager.GetActiveMenuItem();
    bool compat = menu != null && (menu.InternalId == "Categories" || menu.InternalId == "Media" || menu.InternalId == "Users");

}
<div id="pnl-@ExtensionManager.GetInternalIdByType(Model.Type).ToLower()" class="@(!compat ? "main hidden" : "box")">
    <div class="title"><h2>@ExtensionManager.GetExtensionNameByType(Model.Type)</h2></div>
    <div class="inner">
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.IsDraft)
        @Html.HiddenFor(m => m.IsNew)
        @Html.HiddenFor(m => m.ParentId)
        @Html.HiddenFor(m => m.Type)
        @Html.HiddenFor(m => m.Created)
        @Html.HiddenFor(m => m.CreatedBy)
        @Html.PartialFor(folder + view, m => m.Body)
    </div>
</div>